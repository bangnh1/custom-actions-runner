name: Runners

on:
  push:
    branches:
      - "main"

env:
  RUNNER_VERSION: 2.294.0
  DOCKER_VERSION: 20.10.12
  RUNNER_CONTAINER_HOOKS_VERSION: 0.1.2

jobs:
  build-runners:
    name: Build ${{ matrix.name }}-${{ matrix.os-name }}-${{ matrix.os-version }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: actions-runner
            os-name: ubuntu
            os-version: 20.04
          - name: actions-runner-dind
            os-name: ubuntu
            os-version: 20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          endpoint: builders
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./${{ matrix.name }}.dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            DOCKER_VERSION=${{ env.DOCKER_VERSION }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ env.RUNNER_CONTAINER_HOOKS_VERSION }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.name }}:v${{ env.RUNNER_VERSION }}-${{ matrix.os-name }}-${{ matrix.os-version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.name }}:v${{ env.RUNNER_VERSION }}-${{ matrix.os-name }}-${{ matrix.os-version }}-${{ steps.vars.outputs.sha_short }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.name }}:latest
          cache-from: type=gha,scope=build-${{ matrix.name }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.name }}